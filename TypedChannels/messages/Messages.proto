syntax = "proto3";
package messages;
option csharp_namespace = "RPC";
import "lib/Proto.Actor/protos.proto";

message Empty { }
message OpTarget { actor.PID pid = 1; }
message OpSuccess { bool success = 1; }
message MemberList { repeated actor.PID pidList = 1; }
message StringMsg { actor.PID pid = 1; string text = 2; }

service BasicChannel 
{
	rpc Add(OpTarget) returns (OpSuccess) {}
	rpc AddInvisible(OpTarget) returns (OpSuccess) {}
	rpc Remove(OpTarget) returns (OpSuccess) {}

	// looks like grains don't have direct access to the request/response context and MsgEnvelope.
	// was hoping to get sender from a context. But there is no such thing for grains.
	// rpc AddMe(Empty) returns (OpSuccess) {}
	// rpc AddMeInvisible(Empty) returns (OpSuccess) {}
	// rpc RemoveMe(Empty) returns (OpSuccess) {}

	rpc GetVisibleMembers(Empty) returns (MemberList) {}
	rpc GetAllMembers(Empty) returns (MemberList) {}

	// Broadcast
	rpc BroadcastString(StringMsg) returns (OpSuccess) {}
}